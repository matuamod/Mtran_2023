Grammar rules for syntax analyzer

program : PROGRAM variable SEMICOLON block DOT

block : declaration compound_statement

declaration : VAR (variable_declaration SEMICOLON)+
                | (PROCEDURE variable (LPAREN formal_parameter_list RPAREN)? SEMICOLON block SEMICOLON)*  
                | (FUNCTION variable (LPAREN formal_parameter_list RPAREN)? COLON type_spec SEMICOLON block SEMICOLON)*   
                | empty

formal_parameter_list : formal_parameters
                        | formal_parameters SEMICOLON formal_parameter_list

formal_parameters : variable (COMMA variable)* COLON type_spec

variable_declaration : variable (COMMA variable)* COLON type_spec

type_spec : INTEGER
                | REAL
                | CHAR
                | STRING
                | BOOLEAN

compound_statement : BEGIN statement_list END

statement_list : statement
                | statement SEMICOLON statement_list

statement : compound_statement
            | call_statement
            | assignment_statement
            | input_statement
            | output_statement
            | if_statement
            | loop_statement
            | jump_statement
            | case_statement
            | empty

procedure_call_statement : variable LPAREN (logic(COMMA logic)*)? RPAREN

function_call_statement : variable LPAREN (logic(COMMA logic)*)? RPAREN

assignment_statement : variable (ASSINGMENT
                                | PLUS_EQUAL
                                | MINUS_EQUAL
                                | MUL_EQUAL
                                | DIV_EQUAL) logic

input_statement : READLN LPAREN (logic COMMA)* RPAREN

output_statement : WRITELN LPAREN (logic COMMA)* RPAREN

if_statement : IF comparison THEN statement (ELSE statement)?

loop_statement : FOR statement TO logic DO statement 
                | WHILE comparison DO statement
                | REPEAT statement UNTIL comparison

jump_statement : EXIT LPAREN (logic)? RPAREN
                | CONTINUE
                | BREAK

case_statement : CASE logic OF (case_compound SEMICOLON)* default_compound? END

case_compound : logic COLON statement

default_compound :  ELSE statement

comparison : logic ((EQUAL 
                        | NONEQUAL
                        | GREATER
                        | LESS
                        | GREATER_OR_EQUAL
                        | LESS_OR_EQUAL) logic)*

logic : expr ((OR | AND | XOR) expr)*

expr : term ((PLUS | MINUS) term)*

term : factor((MUL 
                | INTEGER_DIV 
                | FLOAT_DIV) factor)*

factor : PLUS factor
        | MINUS factor
        | INTEGER_CONST
        | REAL_CONST
        | CHAR_CONST
        | STRING_CONST
        | BOOLEAN_CONST
        | paren
        | variable

paren : LPAREN logic RPAREN

variable : ID

empty : 


